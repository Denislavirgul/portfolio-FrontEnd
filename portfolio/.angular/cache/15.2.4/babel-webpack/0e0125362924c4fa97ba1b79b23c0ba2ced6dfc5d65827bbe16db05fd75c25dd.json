{"ast":null,"code":"import { FormsModule } from '@angular/forms';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LoginUsuario } from 'src/app/model/login-usuario';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/token.service\";\nimport * as i2 from \"src/app/service/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i5 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(tokenService, authService, router) {\n    this.tokenService = tokenService;\n    this.authService = authService;\n    this.router = router;\n    this.isLogged = false;\n    this.isLogginFail = false;\n    this.roles = [];\n  }\n  ngOnInit() {\n    if (this.tokenService.getToken()) {\n      this.isLogged = true;\n      this.isLogginFail = false;\n      this.roles = this.tokenService.getAuthorities();\n    }\n  }\n  onLogin() {\n    this.loginUsuario = new LoginUsuario(this.nombreUsuario, this.password);\n    this.authService.login(this.loginUsuario).subscribe(data => {\n      this.isLogged = true;\n      this.isLogginFail = false;\n      this.tokenService.setToken(data.token);\n      this.tokenService.setUsername(data.nombreUsuario);\n      this.tokenService.setAuthorities(data.authorities);\n      this.roles = data.authorities;\n      this.router.navigate(['']);\n    }, err => {\n      this.isLogged = false;\n      this.isLogginFail = true;\n      this.errMsj = err.console.error.mensaje;\n      console.log(this.errMsj);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.TokenService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 27,\n  vars: 2,\n  consts: [[1, \"row\"], [1, \"col\"], [\"ngbDropdown\", \"\", 1, \"d-inline-block\"], [\"type\", \"button\", \"id\", \"dropdownForm1\", \"ngbDropdownToggle\", \"\", 1, \"btn\", \"btn-outline-light\", \"btn-lg\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"dropdownForm1\"], [\"novalidate\", \"\", 1, \"px-4\", \"py-3\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"nombreUsuario\"], [\"type\", \"email\", \"id\", \"nombreUsuario\", \"name\", \"nombreUsuario\", \"placeholder\", \"email@ejemplo.com\", \"autocomplete\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", \"autocomplete\", \"current-password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"dropdownCheck\", 1, \"form-check-input\"], [\"for\", \"dropdownCheck\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"dropdown-divider\"], [\"type\", \"button\", \"ngbDropdownItem\", \"\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"button\", 3);\n      i0.ɵɵtext(4, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5, 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Usuario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.nombreUsuario = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 12);\n      i0.ɵɵelement(17, \"input\", 13);\n      i0.ɵɵelementStart(18, \"label\", 14);\n      i0.ɵɵtext(19, \" Remember me \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"button\", 15);\n      i0.ɵɵtext(21, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(22, \"div\", 16);\n      i0.ɵɵelementStart(23, \"button\", 17);\n      i0.ɵɵtext(24, \"\\u00BFNo tienes cuenta? Reg\\u00EDstrate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 17);\n      i0.ɵɵtext(26, \"\\u00BFOlvidaste la contrase\\u00F1a?\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.nombreUsuario);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [NgbDropdownModule, i4.NgbDropdown, i4.NgbDropdownToggle, i4.NgbDropdownMenu, i4.NgbDropdownItem, FormsModule, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,YAAY,QAAQ,6BAA6B;;;;;;;AAa1D,OAAM,MAAOC,cAAc;EASzBC,YAAoBC,YAA0B,EAAUC,WAAuB,EAASC,MAAa;IAAjF,iBAAY,GAAZF,YAAY;IAAwB,gBAAW,GAAXC,WAAW;IAAqB,WAAM,GAANC,MAAM;IAR9F,aAAQ,GAAG,KAAK;IAChB,iBAAY,GAAG,KAAK;IAIpB,UAAK,GAAY,EAAE;EAGoF;EAEvGC,QAAQ;IACN,IAAG,IAAI,CAACH,YAAY,CAACI,QAAQ,EAAE,EAAC;MAC9B,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,YAAY,GAAG,KAAK;MACzB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACP,YAAY,CAACQ,cAAc,EAAE;;EAEnD;EAEAC,OAAO;IACL,IAAI,CAACC,YAAY,GAAG,IAAIb,YAAY,CAAC,IAAI,CAACc,aAAa,EAAE,IAAI,CAACC,QAAQ,CAAC;IACvE,IAAI,CAACX,WAAW,CAACY,KAAK,CAAC,IAAI,CAACH,YAAY,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MACvD,IAAI,CAACV,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,YAAY,GAAG,KAAK;MACzB,IAAI,CAACN,YAAY,CAACgB,QAAQ,CAACD,IAAI,CAACE,KAAK,CAAC;MACtC,IAAI,CAACjB,YAAY,CAACkB,WAAW,CAACH,IAAI,CAACJ,aAAa,CAAC;MACjD,IAAI,CAACX,YAAY,CAACmB,cAAc,CAACJ,IAAI,CAACK,WAAW,CAAC;MAClD,IAAI,CAACb,KAAK,GAAGQ,IAAI,CAACK,WAAW;MAC7B,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,EAAEC,GAAG,IAAG;MACP,IAAI,CAACjB,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACC,YAAY,GAAG,IAAI;MACxB,IAAI,CAACiB,MAAM,GAAGD,GAAG,CAACE,OAAO,CAACC,KAAK,CAACC,OAAO;MACvCF,OAAO,CAACG,GAAG,CAAC,IAAI,CAACJ,MAAM,CAAC;IAE1B,CAAC,CAAC;EACN;;AApCWzB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjB3BC,8BAAiB;MAIbA,uBACD;MAAAA,iBAAS;MACTA,8BAAqD;MAElCA;QAAA,OAAYC,aAAS;MAAA,EAAC;MACvCD,8BAAkB;MACUA,wBAAO;MAAAA,iBAAQ;MAC1CA,iCAQE;MADMA;QAAA;MAAA,EAA2B;MAPnCA,iBAQE;MAEHA,+BAAkB;MACKA,yBAAQ;MAAAA,iBAAQ;MACtCA,kCAOE;MADMA;QAAA;MAAA,EAAsB;MAN9BA,iBAOE;MAEHA,gCAAwB;MACvBA,6BAAqE;MACrEA,kCAAoD;MAACA,8BAAY;MAAAA,iBAAQ;MAE1EA,mCAA8C;MAAAA,sBAAK;MAAAA,iBAAS;MAK7DA,2BAAoC;MACpCA,mCAAsC;MAAAA,wDAA6B;MAAAA,iBAAS;MAC5EA,mCAAsC;MAAAA,oDAAyB;MAAAA,iBAAS;;;MAzB9DA,gBAA2B;MAA3BA,2CAA2B;MAW3BA,eAAsB;MAAtBA,sCAAsB;;;iBDjBxBvC,iBAAiB,gFAAED,WAAW;EAAA0C;AAAA","names":["FormsModule","NgbDropdownModule","LoginUsuario","LoginComponent","constructor","tokenService","authService","router","ngOnInit","getToken","isLogged","isLogginFail","roles","getAuthorities","onLogin","loginUsuario","nombreUsuario","password","login","subscribe","data","setToken","token","setUsername","setAuthorities","authorities","navigate","err","errMsj","console","error","mensaje","log","selectors","standalone","features","decls","vars","consts","template","i0","ctx","styles"],"sourceRoot":"","sources":["D:\\Diseño Web y Programación\\YoProgramo2022-2023\\PortfolioFrontEnd\\portfolio\\src\\app\\componentes\\login\\login.component.ts","D:\\Diseño Web y Programación\\YoProgramo2022-2023\\PortfolioFrontEnd\\portfolio\\src\\app\\componentes\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LoginUsuario } from 'src/app/model/login-usuario';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { TokenService } from 'src/app/service/token.service';\n\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [NgbDropdownModule, FormsModule],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit{\n  isLogged = false;\n  isLogginFail = false;\n  loginUsuario! : LoginUsuario;\n  nombreUsuario! : string;\n  password! : string;\n  roles:string[] = [];\n  errMsj!:string;\n\n  constructor(private tokenService: TokenService, private authService:AuthService,private router:Router){}\n\n  ngOnInit(): void {\n    if(this.tokenService.getToken()){\n      this.isLogged = true;\n      this.isLogginFail = false;\n      this.roles = this.tokenService.getAuthorities();\n    }\n  }\n\n  onLogin():void{\n    this.loginUsuario = new LoginUsuario(this.nombreUsuario, this.password);\n    this.authService.login(this.loginUsuario).subscribe(data =>{\n        this.isLogged = true;\n        this.isLogginFail = false;\n        this.tokenService.setToken(data.token);\n        this.tokenService.setUsername(data.nombreUsuario);\n        this.tokenService.setAuthorities(data.authorities);\n        this.roles = data.authorities;\n        this.router.navigate([''])\n      }, err =>{\n        this.isLogged = false;\n        this.isLogginFail = true;\n        this.errMsj = err.console.error.mensaje;\n        console.log(this.errMsj);\n\n      })\n  }\n\n}\n","<div class=\"row\">\n\t<div class=\"col\">\n\t\t<div ngbDropdown class=\"d-inline-block\">\n\t\t\t<button type=\"button\" class=\"btn btn-outline-light btn-lg\" id=\"dropdownForm1\" ngbDropdownToggle>\n\t\t\t\tLogin\n\t\t\t</button>\n\t\t\t<div ngbDropdownMenu aria-labelledby=\"dropdownForm1\">\n\n\t\t\t\t<form #f=\"ngForm\" (ngSubmit)=\"onLogin()\" novalidate class=\"px-4 py-3\">\n\t\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t\t<label for=\"nombreUsuario\">Usuario</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\t\tid=\"nombreUsuario\"\n              name=\"nombreUsuario\"\n\t\t\t\t\t\t\tplaceholder=\"email@ejemplo.com\"\n\t\t\t\t\t\t\tautocomplete=\"username\"\n              [(ngModel)]=\"nombreUsuario\" required\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t\t<label for=\"password\">Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tautocomplete=\"current-password\"\n              [(ngModel)]=\"password\" required\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-check\">\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"form-check-input\" id=\"dropdownCheck\" />\n\t\t\t\t\t\t<label class=\"form-check-label\" for=\"dropdownCheck\"> Remember me </label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">Login</button>\n\t\t\t\t</form>\n\n\n\n\t\t\t\t<div class=\"dropdown-divider\"></div>\n\t\t\t\t<button type=\"button\" ngbDropdownItem>¿No tienes cuenta? Regístrate</button>\n\t\t\t\t<button type=\"button\" ngbDropdownItem>¿Olvidaste la contraseña?</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}