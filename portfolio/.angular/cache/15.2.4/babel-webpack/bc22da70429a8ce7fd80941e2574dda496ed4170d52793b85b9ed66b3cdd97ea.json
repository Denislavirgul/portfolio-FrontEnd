{"ast":null,"code":"import _asyncToGenerator from \"D:/Dise\\xF1o Web y Programaci\\xF3n/YoProgramo2022-2023/PortfolioFrontEnd/portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getDownloadURL, list, ref, uploadBytes } from '@angular/fire/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport class ImageService {\n  fileStorageRef(name) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(storage) {\n    this.storage = storage;\n    this.url = \"\";\n  }\n  uploadImage($event) {\n    const file = $event.target.files[0];\n    const imgRef = ref(this.storage, `imagen/` + name);\n    uploadBytes(imgRef, file).then(response => {\n      this.getImages();\n    }).catch(error => console.log(error));\n  }\n  getImages() {\n    var _this = this;\n    const imagesRef = ref(this.storage, 'imagen');\n    list(imagesRef).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        for (let item of response.items) {\n          _this.url = yield getDownloadURL(item);\n          console.log(\"la url es: \" + _this.url);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(error => console.log(error));\n  }\n}\nImageService.ɵfac = function ImageService_Factory(t) {\n  return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n};\nImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageService,\n  factory: ImageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAAkBA,cAAc,EAAEC,IAAI,EAAEC,GAAG,EAAEC,WAAW,QAAQ,uBAAuB;;;AAKvF,OAAM,MAAOC,YAAY;EACvBC,cAAc,CAACC,IAAS;IACtB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEAC,YAAoBC,OAAe;IAAf,YAAO,GAAPA,OAAO;IAD3B,QAAG,GAAU,EAAE;EACwB;EAEhCC,WAAW,CAACC,MAAU;IAC3B,MAAMC,IAAI,GAAED,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAMC,MAAM,GAAGb,GAAG,CAAC,IAAI,CAACO,OAAO,EAAE,SAAS,GAACH,IAAI,CAAC;IAChDH,WAAW,CAACY,MAAM,EAAEH,IAAI,CAAC,CACxBI,IAAI,CAACC,QAAQ,IAAG;MAAC,IAAI,CAACC,SAAS,EAAE;IAAA,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACjC;EACH;EAEAF,SAAS;IAAA;IACP,MAAMK,SAAS,GAAGrB,GAAG,CAAC,IAAI,CAACO,OAAO,EAAE,QAAQ,CAAC;IAC7CR,IAAI,CAAEsB,SAAS,CAAC,CACfP,IAAI;MAAA,6BAAC,WAAMC,QAAQ,EAAG;QACrB,KAAI,IAAIO,IAAI,IAAIP,QAAQ,CAACQ,KAAK,EAAC;UAC7B,KAAI,CAACC,GAAG,SAAS1B,cAAc,CAACwB,IAAI,CAAC;UACrCH,OAAO,CAACC,GAAG,CAAC,aAAa,GAAG,KAAI,CAACI,GAAG,CAAC;;MAEzC,CAAC;MAAA;QAAA;MAAA;IAAA,IAAC,CACDP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACrC;;AA1BWhB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAuB,SAAZvB,YAAY;EAAAwB,YAFX;AAAM","names":["getDownloadURL","list","ref","uploadBytes","ImageService","fileStorageRef","name","Error","constructor","storage","uploadImage","$event","file","target","files","imgRef","then","response","getImages","catch","error","console","log","imagesRef","item","items","url","factory","providedIn"],"sourceRoot":"","sources":["D:\\Diseño Web y Programación\\YoProgramo2022-2023\\PortfolioFrontEnd\\portfolio\\src\\app\\service\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Storage, getDownloadURL, list, ref, uploadBytes } from '@angular/fire/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  fileStorageRef(name: any) {\n    throw new Error('Method not implemented.');\n  }\n  url:string = \"\";\n  constructor(private storage:Storage) { }\n\n  public uploadImage($event:any){\n    const file= $event.target.files[0]\n    const imgRef = ref(this.storage, `imagen/`+name)\n    uploadBytes(imgRef, file)\n    .then(response =>{this.getImages()})\n    .catch(error => console.log(error)\n    )\n  }\n\n  getImages(){\n    const imagesRef = ref(this.storage, 'imagen')\n    list (imagesRef)\n    .then(async response =>{\n      for(let item of response.items){\n        this.url = await getDownloadURL(item);\n        console.log(\"la url es: \" + this.url);\n      }\n    })\n    .catch(error => console.log(error))\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}