{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nlet InterceptorService = class InterceptorService {\n  constructor(tokenService) {\n    this.tokenService = tokenService;\n  }\n  intercept(req, next) {\n    let intReq = req;\n    const token = this.tokenService.getToken();\n    if (token != null) {\n      intReq = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer' + token)\n      });\n    }\n    return next.handle(intReq);\n  }\n};\nInterceptorService = __decorate([Inyectable({\n  providedIn: 'root'\n})], InterceptorService);\nexport { InterceptorService };\nexport const interceptorProvider = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: InterceptorService,\n  multi: true\n}];\nfunction Inyectable(arg0) {\n  throw new Error(\"Function not implemented.\");\n}","map":{"version":3,"mappings":";AAAA,SAASA,iBAAiB,QAA6C,sBAAsB;AAOtF,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAC7BC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAAgB;EAE9CC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAIC,MAAM,GAAGF,GAAG;IAChB,MAAMG,KAAK,GAAG,IAAI,CAACL,YAAY,CAACM,QAAQ,EAAE;IAC1C,IAAGD,KAAK,IAAI,IAAI,EAAC;MACfD,MAAM,GAAGF,GAAG,CAACK,KAAK,CAAC;QACjBC,OAAO,EAAEN,GAAG,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,QAAQ,GAACJ,KAAK;OACxD,CAAC;;IAEJ,OAAOF,IAAI,CAACO,MAAM,CAACN,MAAM,CAAC;EAC5B;CACH;AAbYN,kBAAkB,eAH9Ba,UAAU,CAAC;EACRC,UAAU,EAAC;CACd,CAAC,GACWd,kBAAkB,CAa9B;SAbYA,kBAAkB;AAe/B,OAAO,MAAMe,mBAAmB,GAAG,CAAC;EAClCC,OAAO,EAAEjB,iBAAiB;EAC1BkB,QAAQ,EAAEjB,kBAAkB;EAC5BkB,KAAK,EAAE;CACR,CAAC;AACF,SAASL,UAAU,CAACM,IAA6B;EAC/C,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;AAC9C","names":["HTTP_INTERCEPTORS","InterceptorService","constructor","tokenService","intercept","req","next","intReq","token","getToken","clone","headers","set","handle","Inyectable","providedIn","interceptorProvider","provide","useClass","multi","arg0","Error"],"sourceRoot":"","sources":["D:\\Diseño Web y Programación\\YoProgramo2022-2023\\PortfolioFrontEnd\\portfolio\\src\\app\\service\\interceptor-service.ts"],"sourcesContent":["import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpRequest } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { TokenService } from \"./token.service\";\n\n@Inyectable({\n    providedIn:'root'\n})\nexport class InterceptorService {\n  constructor(private tokenService: TokenService){}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n      let intReq = req;\n      const token = this.tokenService.getToken();\n      if(token != null){\n        intReq = req.clone({\n          headers: req.headers.set('Authorization','Bearer'+token)\n        });\n      }\n      return next.handle(intReq);\n    }\n}\n\nexport const interceptorProvider = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: InterceptorService,\n  multi: true\n}];\nfunction Inyectable(arg0: { providedIn: string; }): (target: typeof InterceptorService) => void | typeof InterceptorService {\n  throw new Error(\"Function not implemented.\");\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}