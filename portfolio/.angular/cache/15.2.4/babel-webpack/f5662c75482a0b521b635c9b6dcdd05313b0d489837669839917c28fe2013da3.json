{"ast":null,"code":"import { FormsModule } from '@angular/forms';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LoginUsuario } from 'src/app/model/login-usuario';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/token.service\";\nimport * as i2 from \"src/app/service/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(tokenService, authService, router) {\n    this.tokenService = tokenService;\n    this.authService = authService;\n    this.router = router;\n    this.isLogged = false;\n    this.isLogginFail = false;\n    this.roles = [];\n  }\n  ngOnInit() {\n    if (this.tokenService.getToken()) {\n      this.isLogged = true;\n      this.isLogginFail = false;\n      this.roles = this.tokenService.getAuthorities();\n    }\n  }\n  onLogin() {\n    this.loginUsuario = new LoginUsuario(this.nombreUsuario, this.password);\n    this.authService.login(this.loginUsuario).subscribe(data => {\n      this.isLogged = true;\n      this.isLogginFail = false;\n      this.tokenService.setToken(data.token);\n      this.tokenService.setUsername(data.nombreUsuario);\n      this.tokenService.setAuthorities(data.authorities);\n      this.roles = data.authorities;\n      this.router.navigate(['']);\n    }, err => {\n      this.isLogged = false;\n      this.isLogginFail = true;\n      this.errMsj = err.console.error.mensaje;\n      console.log(this.errMsj);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.TokenService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 0,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {},\n  dependencies: [NgbDropdownModule, FormsModule],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,YAAY,QAAQ,6BAA6B;;;;;AAa1D,OAAM,MAAOC,cAAc;EASzBC,YAAoBC,YAA0B,EAAUC,WAAuB,EAASC,MAAa;IAAjF,iBAAY,GAAZF,YAAY;IAAwB,gBAAW,GAAXC,WAAW;IAAqB,WAAM,GAANC,MAAM;IAR9F,aAAQ,GAAG,KAAK;IAChB,iBAAY,GAAG,KAAK;IAIpB,UAAK,GAAY,EAAE;EAGoF;EAEvGC,QAAQ;IACN,IAAG,IAAI,CAACH,YAAY,CAACI,QAAQ,EAAE,EAAC;MAC9B,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,YAAY,GAAG,KAAK;MACzB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACP,YAAY,CAACQ,cAAc,EAAE;;EAEnD;EAEAC,OAAO;IACL,IAAI,CAACC,YAAY,GAAG,IAAIb,YAAY,CAAC,IAAI,CAACc,aAAa,EAAE,IAAI,CAACC,QAAQ,CAAC;IACvE,IAAI,CAACX,WAAW,CAACY,KAAK,CAAC,IAAI,CAACH,YAAY,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MACvD,IAAI,CAACV,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,YAAY,GAAG,KAAK;MACzB,IAAI,CAACN,YAAY,CAACgB,QAAQ,CAACD,IAAI,CAACE,KAAK,CAAC;MACtC,IAAI,CAACjB,YAAY,CAACkB,WAAW,CAACH,IAAI,CAACJ,aAAa,CAAC;MACjD,IAAI,CAACX,YAAY,CAACmB,cAAc,CAACJ,IAAI,CAACK,WAAW,CAAC;MAClD,IAAI,CAACb,KAAK,GAAGQ,IAAI,CAACK,WAAW;MAC7B,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,EAAEC,GAAG,IAAG;MACP,IAAI,CAACjB,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACC,YAAY,GAAG,IAAI;MACxB,IAAI,CAACiB,MAAM,GAAGD,GAAG,CAACE,OAAO,CAACC,KAAK,CAACC,OAAO;MACvCF,OAAO,CAACG,GAAG,CAAC,IAAI,CAACJ,MAAM,CAAC;IAE1B,CAAC,CAAC;EACN;;AApCWzB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC,eALftC,iBAAiB,EAAED,WAAW;EAAAwC;AAAA","names":["FormsModule","NgbDropdownModule","LoginUsuario","LoginComponent","constructor","tokenService","authService","router","ngOnInit","getToken","isLogged","isLogginFail","roles","getAuthorities","onLogin","loginUsuario","nombreUsuario","password","login","subscribe","data","setToken","token","setUsername","setAuthorities","authorities","navigate","err","errMsj","console","error","mensaje","log","selectors","standalone","features","decls","vars","template","dependencies","styles"],"sourceRoot":"","sources":["D:\\Diseño Web y Programación\\YoProgramo2022-2023\\PortfolioFrontEnd\\portfolio\\src\\app\\componentes\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LoginUsuario } from 'src/app/model/login-usuario';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { TokenService } from 'src/app/service/token.service';\n\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [NgbDropdownModule, FormsModule],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit{\n  isLogged = false;\n  isLogginFail = false;\n  loginUsuario! : LoginUsuario;\n  nombreUsuario! : string;\n  password! : string;\n  roles:string[] = [];\n  errMsj!:string;\n\n  constructor(private tokenService: TokenService, private authService:AuthService,private router:Router){}\n\n  ngOnInit(): void {\n    if(this.tokenService.getToken()){\n      this.isLogged = true;\n      this.isLogginFail = false;\n      this.roles = this.tokenService.getAuthorities();\n    }\n  }\n\n  onLogin():void{\n    this.loginUsuario = new LoginUsuario(this.nombreUsuario, this.password);\n    this.authService.login(this.loginUsuario).subscribe(data =>{\n        this.isLogged = true;\n        this.isLogginFail = false;\n        this.tokenService.setToken(data.token);\n        this.tokenService.setUsername(data.nombreUsuario);\n        this.tokenService.setAuthorities(data.authorities);\n        this.roles = data.authorities;\n        this.router.navigate([''])\n      }, err =>{\n        this.isLogged = false;\n        this.isLogginFail = true;\n        this.errMsj = err.console.error.mensaje;\n        console.log(this.errMsj);\n\n      })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}